(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{67:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 部署")]),a("p",[t._v("下述的指南基于以下条件：")]),a("ul",[a("li",[t._v("文档放置在项目的 "),a("code",[t._v("docs")]),t._v(" 目录中；")]),a("li",[t._v("使用的是默认的构建输出位置；")]),a("li",[t._v("VuePress 以本地依赖的形式被安装到你的项目中，并且配置了如下的 npm scripts:")])]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"docs:build"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h2",{attrs:{id:"github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-pages","aria-hidden":"true"}},[t._v("#")]),t._v(" GitHub Pages")]),a("ol",[a("li",[a("p",[t._v("在 "),a("code",[t._v("docs/.vuepress/config.js")]),t._v(" 中设置正确的 "),a("code",[t._v("base")]),t._v("。")]),a("p",[t._v("如果你打算发布到 "),a("code",[t._v("https://<USERNAME>.github.io/")]),t._v("，则可以省略这一步，因为 "),a("code",[t._v("base")]),t._v(" 默认即是 "),a("code",[t._v('"/"')]),t._v("。")]),a("p",[t._v("如果你打算发布到 "),a("code",[t._v("https://<USERNAME>.github.io/<REPO>/")]),t._v("（也就是说你的仓库在 "),a("code",[t._v("https://github.com/<USERNAME>/REPO>")]),t._v("），则将 "),a("code",[t._v("base")]),t._v(" 设置为 "),a("code",[t._v('"/<REPO>/"')]),t._v("。")])]),a("li",[a("p",[t._v("在你的项目中，创建一个如下的 "),a("code",[t._v("deploy.sh")]),t._v(" 文件（请自行判断去掉高亮行的注释）:")])])]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -e\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" run docs:build\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" docs/.vuepress/dist\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 如果是发布到自定义域名")]),t._v("\n"),a("span",{attrs:{class:"highlighted-line"}},[a("span",{attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")])]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n"),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io")]),t._v("\n"),a("span",{attrs:{class:"highlighted-line"}},[a("span",{attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")])]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),a("span",{attrs:{class:"highlighted-line"}},[a("span",{attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")])]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" -\n")])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),a("p",[t._v("你可以在你的持续集成的设置中，设置在每次 push 代码时自动运行上述脚本。")])]),a("h2",{attrs:{id:"gitlab-pages-and-gitlab-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-pages-and-gitlab-ci","aria-hidden":"true"}},[t._v("#")]),t._v(" GitLab Pages and GitLab CI")]),a("ol",[a("li",[a("p",[t._v("在 "),a("code",[t._v("docs/.vuepress/config.js")]),t._v(" 中设置正确的 "),a("code",[t._v("base")]),t._v("。")]),a("p",[t._v("如果你打算发布到 "),a("code",[t._v("https://<USERNAME or GROUP>.gitlab.io/")]),t._v("，则可以省略这一步，因为 "),a("code",[t._v("base")]),t._v(" 默认即是 "),a("code",[t._v('"/"')]),t._v("。")]),a("p",[t._v("如果你打算发布到 "),a("code",[t._v("https://<USERNAME or GROUP>.gitlab.io/<REPO>/")]),t._v("（也就是说你的仓库在 "),a("code",[t._v("https://gitlab.com/<USERNAME>/REPO>")]),t._v("），则将 "),a("code",[t._v("base")]),t._v(" 设置为 "),a("code",[t._v('"/<REPO>/"')]),t._v("。")])]),a("li",[a("p",[t._v("在 "),a("code",[t._v(".vuepress/config.js")]),t._v(" 中将 "),a("code",[t._v("dest")]),t._v(" 设置为 "),a("code",[t._v("public")]),t._v("。")])]),a("li",[a("p",[t._v("在你项目的根目录下创建一个名为 "),a("code",[t._v(".gitlab-ci.yml")]),t._v(" 的文件，无论何时你提交了更改，它都会帮助你自动构建和部署：")])])]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9.11.1\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("pages")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n\n "),a("span",{attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run docs"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build\n "),a("span",{attrs:{class:"token key atrule"}},[t._v("artifacts")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" public\n "),a("span",{attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])]),a("h2",{attrs:{id:"netlify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#netlify","aria-hidden":"true"}},[t._v("#")]),t._v(" Netlify")]),a("ol",[a("li",[t._v("在 Netlify 中, 创建一个新的 Github 项目，使用以下设置：")])]),a("ul",[a("li",[a("strong",[t._v("Build Command:")]),a("code",[t._v("npm run build-docs")]),t._v(" 或者 "),a("code",[t._v("yarn build-docs")])]),a("li",[a("strong",[t._v("Publish directory:")]),a("code",[t._v("docs/.vuepress/dist")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("点击 deploy 按钮！")])]),a("h2",{attrs:{id:"google-firebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-firebase","aria-hidden":"true"}},[t._v("#")]),t._v(" Google Firebase")]),a("ol",[a("li",[a("p",[t._v("请确保你已经安装了 "),a("a",{attrs:{href:"https://www.npmjs.com/package/firebase-tools",target:"_blank",rel:"noopener noreferrer"}},[t._v("firebase-tools")]),t._v("。")])]),a("li",[a("p",[t._v("在你项目的根目录下创建 "),a("code",[t._v("firebase.json")]),t._v(" 和 "),a("code",[t._v(".firebaserc")]),t._v("，并包含以下内容：")]),a("p",[a("code",[t._v("firebase.json")]),t._v(":")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"hosting"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"public"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"./docs/.vuepress/dist"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"ignore"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[a("code",[t._v(".firebaserc")]),t._v(":")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token string"}},[t._v('"projects"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token string"}},[t._v('"default"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<YOUR_FIREBASE_ID>"')]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("li",[a("p",[t._v("在执行了 "),a("code",[t._v("yarn docs:build")]),t._v(" 或 "),a("code",[t._v("npm run docs:build")]),t._v(" 后, 使用 "),a("code",[t._v("firebase deploy")]),t._v(" 指令来部署。")])])])])}],!1,null,null,null);s.default=e.exports}}]);